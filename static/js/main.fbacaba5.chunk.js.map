{"version":3,"sources":["About.js","Portfolio.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["About","react_default","a","createElement","className","id","src","alt","Portfolio","href","Contact","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updatePage","event","preventDefault","setState","currentPage","target","innerText","pageToLoad","state","src_About","src_Portfolio","src_Contact","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fbacaba5.chunk.js","sourcesContent":["import React from 'react';\n\nfunction About() {\n  return (\n    <div className='page-padding-div'>\n      <h1>about me</h1>\n      <div id='about-content'>\n        <img id='headshot-image' src='./assets/headshot2.jpg' alt='head shot'></img>\n        <div id='about-text'>\n          <p>I am a Denver based web developer passionate about front-end development as a means to convey complicated data and information to a broader audience. I'm excited by innovation and creating products and solutions from scratch with code. My background working with scientific data and data analysis have taught me that how you display and communicate information greatly impacts how powerful an impact it will have on the audience.</p>\n          <p>As a front-end engineer, I am proficient in HTML, CSS (including SASS), and Javascript. I have a strong foundation in Reactjs, DOM manipulation, and Object-Oriented Programming. I also have knowledge of UX/UI principles to build desktop, mobile and web apps. Additionally, I am proficient with team collaboration using git, GitHub, agile workflow, and Atlassian software.</p>\n          <p>My educational background and experience are in coastal and climate change resiliency so I am particularly passionate about those topics. I have worked extensively with Geographic Information Systems (GIS) software as a useful tool to analyze and visualize data.</p>\n          <p>Outside of coding, I enjoy many outdoor activities including mountain biking, hiking, camping. I also play soccer, am a casual CrossFitter, and love knitting.</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default About;","import React from 'react';\n\nfunction Portfolio() {\n  return (\n    <div className='page-padding-div'>\n      <h1>portfolio</h1>\n      <div id='portfolio-content'>\n        <a href='https://github.com/kaohman/national-parks'>\n          <h3>mark my parks</h3>\n          <img className='screenshots' src='./assets/parks-screenshot.png' alt='mark my parks website'></img>\n        </a>\n        <a href='https://github.com/kaohman/jeopardy'>\n          <h3>space jeopardy</h3>\n          <img className='screenshots' src='./assets/jeopardy-screenshot.png' alt='sapce jeopardy website'></img>\n        </a>\n        <a href='https://github.com/kaohman/js-proto-fun-time'>\n          <h3>jsProtoFunTime</h3>\n          <img className='screenshots' src='./assets/prototypes-screenshot.png' alt='javascript prototypes website'></img>\n        </a>\n        <a href='https://github.com/kaohman/foto-finder'>\n          <h3>foto-finder</h3>\n          <img className='screenshots' src='./assets/foto-finder-screenshot.png' alt='photo finder website'></img>\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default Portfolio;","import React from 'react';\n\nfunction Contact() {\n  return (\n    <div className='page-padding-div'>\n      <h1>contact information</h1>\n      <div id='contact-content'>\n        <a href='https://github.com/kaohman'>\n          <img className='logo' src='./assets/github-logo.png' alt='github logo'></img>\n          <span>GitHub</span>\n        </a>\n        <a href='https://www.linkedin.com/in/karin-ohman/'>\n          <img className='logo' src='./assets/linkedin-logo.png' alt='linked in logo'></img>\n          <span>LinkedIn</span>\n        </a>\n        <a href=\"mailto:kaohma@gmail.com\">\n          <img className='logo' id='contact-headshot' src='./assets/headshot.jpg' alt='head shot'></img>\n          <span>Email Me</span>\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport './App.css';\nimport './styles/normalize.css';\nimport './styles/main.scss';\nimport About from './About';\nimport Portfolio from './Portfolio';\nimport Contact from './Contact';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentPage: 'karin ohman'\n    };\n  }\n\n  updatePage = (event) => {\n    event.preventDefault();\n    this.setState({\n      currentPage: event.target.innerText\n    });\n  }\n\n  pageToLoad = () => {\n    switch (this.state.currentPage) {\n      case 'about': \n        return(\n          <About />\n        );\n      case 'portfolio':\n        return(\n          <Portfolio />\n        );\n      case 'contact':\n        return(\n          <Contact />\n        );\n      default: \n        return (\n          <div className='page-padding-div' id='homepage-content'>\n            <h1 id='title-name'>KARIN OHMAN</h1>\n            <h2 id='title-subheader'>front-end web developer</h2>\n            <p id='title-tagline'>I am an earth scientist turned web developer. I am passionate about sharing data with the world through beautifully designed web applications. Please click on the links above to learn more.</p>\n          </div>\n        );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <nav>\n          <p onClick={this.updatePage}><span className='links'>karin ohman</span>: front-end developer</p>\n          <p onClick={this.updatePage} className='links'>about</p>\n          <p onClick={this.updatePage} className='links'>portfolio</p>\n          <p onClick={this.updatePage} className='links'>contact</p>\n        </nav>\n        { \n          this.pageToLoad()\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}